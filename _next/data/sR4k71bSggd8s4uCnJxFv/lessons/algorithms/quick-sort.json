{"pageProps":{"post":{"attributes":{"title":"What is quicksort?","description":"Introduction quicksort Algorithm."},"html":"<h1 id=\"quicksort-algorithm-explanation\">Quicksort Algorithm explanation.</h1>\n<p>Quicksort is a recursive sorting algorithm. In this algorithm, the hard work is splitting the array into smaller sub arrays before <em>recursion</em>, so that merging the sorted sub arrays is trivial.</p>\n<ol>\n<li>Choose a <em>pivot</em> element from the array.</li>\n<li>Partition the array into three sub arrays containing the elements smaller than or equal to the <em>pivot</em>, the <em>pivot</em> element itself, and the elements larger than <em>pivot</em>.</li>\n<li>Recursively quicksort the first and last sub arrays.</li>\n</ol>\n<h2 id=\"time-complexity\">Time Complexity</h2>\n<ol>\n<li>Best - Ω(n log(n))</li>\n<li>Average - Θ(n log(n))</li>\n<li>Worst - O(n<sup>2</sup>)</li>\n</ol>\n<h2 id=\"space-complexity\">Space Complexity</h2>\n<ul>\n<li>Worst - O(log(n))</li>\n</ul>\n<h2 id=\"implementation\">Implementation</h2>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">quickSort</span>(<span class=\"hljs-params\">nums: <span class=\"hljs-built_in\">number</span>[]</span>) {\n  <span class=\"hljs-keyword\">if</span> (nums.<span class=\"hljs-property\">length</span> &lt;= <span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">return</span> nums;\n\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">pivot</span>: <span class=\"hljs-built_in\">number</span> = nums[nums.<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span>];\n\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">left</span>: <span class=\"hljs-built_in\">number</span>[] = [];\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">right</span>: <span class=\"hljs-built_in\">number</span>[] = [];\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; nums.<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span>; i++) {\n    <span class=\"hljs-keyword\">if</span> (nums[i] &lt; pivot) {\n      left.<span class=\"hljs-title function_\">push</span>(nums[i]);\n    } <span class=\"hljs-keyword\">else</span> {\n      right.<span class=\"hljs-title function_\">push</span>(nums[i]);\n    }\n  }\n\n  <span class=\"hljs-title function_\">quickSort</span>(left);\n  <span class=\"hljs-title function_\">quickSort</span>(right);\n\n  <span class=\"hljs-keyword\">return</span> [...<span class=\"hljs-title function_\">quickSort</span>(left), pivot, ...<span class=\"hljs-title function_\">quickSort</span>(right)];\n}\n</code></pre>\n<p>In place implementation of Quick Sort</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">const</span> array = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">33</span>, <span class=\"hljs-number\">31</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">63</span>, <span class=\"hljs-number\">123</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">32</span>, <span class=\"hljs-number\">943</span>, <span class=\"hljs-number\">346</span>, <span class=\"hljs-number\">24</span>];\n\n<span class=\"hljs-comment\">/**\n * Split array and swap values\n *\n * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">Array&lt;number&gt;</span>} <span class=\"hljs-variable\">array</span>\n * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">number</span>} [left=0]\n * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">number</span>} [right=array.length - 1]\n * <span class=\"hljs-doctag\">@returns</span> {<span class=\"hljs-type\">number</span>}\n */</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">partition</span>(<span class=\"hljs-params\">\n  array: <span class=\"hljs-built_in\">Array</span>&lt;<span class=\"hljs-built_in\">number</span>&gt;,\n  left: <span class=\"hljs-built_in\">number</span> = <span class=\"hljs-number\">0</span>,\n  right: <span class=\"hljs-built_in\">number</span> = array.length - <span class=\"hljs-number\">1</span>\n</span>) {\n  <span class=\"hljs-keyword\">const</span> pivot = array[<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>((right + left) / <span class=\"hljs-number\">2</span>)];\n  <span class=\"hljs-keyword\">let</span> i = left;\n  <span class=\"hljs-keyword\">let</span> j = right;\n\n  <span class=\"hljs-keyword\">while</span> (i &lt;= j) {\n    <span class=\"hljs-keyword\">while</span> (array[i] &lt; pivot) {\n      i++;\n    }\n\n    <span class=\"hljs-keyword\">while</span> (array[j] &gt; pivot) {\n      j--;\n    }\n\n    <span class=\"hljs-keyword\">if</span> (i &lt;= j) {\n      [array[i], array[j]] = [array[j], array[i]];\n      i++;\n      j--;\n    }\n  }\n\n  <span class=\"hljs-keyword\">return</span> i;\n}\n\n<span class=\"hljs-comment\">/**\n * Quicksort implementation\n *\n * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">Array&lt;number&gt;</span>} <span class=\"hljs-variable\">array</span>\n * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">number</span>} [left=0]\n * <span class=\"hljs-doctag\">@param</span> {<span class=\"hljs-type\">number</span>} [right=array.length - 1]\n * <span class=\"hljs-doctag\">@returns</span> {<span class=\"hljs-type\">Array&lt;number&gt;</span>}\n */</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">quickSort</span>(<span class=\"hljs-params\">\n  array: <span class=\"hljs-built_in\">Array</span>&lt;<span class=\"hljs-built_in\">number</span>&gt;,\n  left: <span class=\"hljs-built_in\">number</span> = <span class=\"hljs-number\">0</span>,\n  right: <span class=\"hljs-built_in\">number</span> = array.length - <span class=\"hljs-number\">1</span>\n</span>) {\n  <span class=\"hljs-keyword\">let</span> index;\n\n  <span class=\"hljs-keyword\">if</span> (array.<span class=\"hljs-property\">length</span> &gt; <span class=\"hljs-number\">1</span>) {\n    index = <span class=\"hljs-title function_\">partition</span>(array, left, right);\n\n    <span class=\"hljs-keyword\">if</span> (left &lt; index - <span class=\"hljs-number\">1</span>) {\n      <span class=\"hljs-title function_\">quickSort</span>(array, left, index - <span class=\"hljs-number\">1</span>);\n    }\n\n    <span class=\"hljs-keyword\">if</span> (index &lt; right) {\n      <span class=\"hljs-title function_\">quickSort</span>(array, index, right);\n    }\n  }\n\n  <span class=\"hljs-keyword\">return</span> array;\n}\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">assert</span>(\n  <span class=\"hljs-title function_\">quickSort</span>(array, <span class=\"hljs-number\">0</span>, array.<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span>).<span class=\"hljs-title function_\">toString</span>() ===\n    <span class=\"hljs-string\">&quot;1,1,2,2,6,24,31,32,33,63,123,346,943&quot;</span>,\n  <span class=\"hljs-string\">&quot;Wrong Implementation&quot;</span>\n);\n</code></pre>\n","slug":"quick-sort","title":"What is quicksort?","section":"Algorithms","icon":"file-code","filePath":"/home/runner/work/dsa/dsa/lessons/03-algorithms/C-quick-sort.md","nextSlug":"/dsa/lessons/algorithms/merge-sort","prevSlug":"/dsa/lessons/algorithms/binary-search"}},"__N_SSG":true}