{"pageProps":{"post":{"attributes":{"title":"Measuring Algorithmic Complexity.","description":"The introduction to this course."},"html":"<h1 id=\"algorithmic-complexity\">Algorithmic Complexity</h1>\n<p>To calculate the complexity of an algorithm we just need to count the number of statements our program has to execute.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">askInfo</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;Enter your name:&quot;</span>);\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;Enter your name:&quot;</span>);\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;Enter your name:&quot;</span>);\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;Enter your name:&quot;</span>);\n}\n</code></pre>\n<p>Here is how time complexity is calculated:</p>\n<ul>\n<li>Statement count = 4</li>\n<li>Complexity = O(4)</li>\n<li>Constant Complexity = O(1)</li>\n</ul>\n<p>Here is an example where complexity depends on given input.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">printItems</span>(<span class=\"hljs-params\">items</span>) {\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt;= items.<span class=\"hljs-property\">length</span>; i++) {\n    <span class=\"hljs-comment\">// do something</span>\n  }\n}\n</code></pre>\n<p>The statement count is <code>1 + 4n</code>, since <code>n</code> has the highest significance, we can drop the constants.</p>\n<ul>\n<li>Statement count = <code>1 + 4n</code></li>\n<li>Complexity = <code>O(4n)</code></li>\n<li>Constant Complexity = <code>O(n)</code></li>\n</ul>\n<h2 id=\"common-complexities\">Common Complexities</h2>\n<p>Here is the list of common complexities</p>\n<ol>\n<li>Linear - O(n)</li>\n<li>Quadratic - O(n<sup>2</sup>)</li>\n<li>Constant - O(1)</li>\n<li>Exponential - O(log n)</li>\n</ol>\n","slug":"measuring-algorithmic-complexity","title":"Measuring Algorithmic Complexity.","section":"The Big O Notation","icon":"info-circle","filePath":"/home/runner/work/dsa/dsa/lessons/01-the-big-o-notation/C-measuring-algorithmic-complexity.md","nextSlug":"/dsa/lessons/the-big-o-notation/common-complexities","prevSlug":"/dsa/lessons/the-big-o-notation/complexity"}},"__N_SSG":true}